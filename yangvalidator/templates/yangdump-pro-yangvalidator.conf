#
# yangdump-pro configuration file
# yangdump-sdk configuration file
# Refer to yangdump-pro container definition in yangdump-pro.yang
# for full CLI documentation.
#
# version 17.10-12
#

yangdump-pro {

#### leaf defnames
#  If 'true', then output to a file with the default name
#  for the format, usually to the current directory.
#  Not used if the format parameter is missing.
#
# defnames false
#
#### leaf dependencies [empty]
#  If present, validate the file, write the module name, version
#  and module source for each file that this [sub]module
#  imports and includes, then exit.
#
# default is not to print dependencies and exit
#
#### leaf-list deviation
#  Specifies a YANG module to use as a source of deviations
#  e.g. deviation project-X-deviations
#
# no default for deviation
#
#### leaf exports [empty]
#  If present, validate the file, write information for the symbols
#  that this [sub]module exports, then exit.
#
# default is not to print exports and exit
#
#### leaf feature-code-default
#
#  The default feature code generation type.
#  Enums:
#   static
#   dynamic
#
# feature-code-default dynamic
#
#### leaf-list feature-disable
#     syntax:  module-name:feature-name
# Identifies a feature which should be considered disabled.
# Zero or more entries are allowed.
#
# no default for feature-disable (e.g., feature-disable foo:feature1)
#
#### leaf-list feature-dynamic
#   Identifies a feature which is configured to be a
#   static feature, and therefore set at compile time.
#
# (no default for feature-dynamic)
#
#### leaf-list feature-enable
#     syntax: module-name:feature-name
# Identifies a feature which should be considered enabled.
# Zero or more entries are allowed.
#
# no default for feature-enable (e.g., feature-enable foo:feature1)
#
#### leaf feature-enable-default
# If true (the default), then features will be  enabled  by  default.
# If false, then features will be disabled by default.
#
# feature-enable-default true
#
#### leaf-list feature-static
#  Identifies a feature which is configured to be a
#  static feature, and therefore set at compile time.
#
# (no default for feature-static)
#
#### leaf format [FormatType]
#  Type of conversion desired, if any. If this
#  parameter is missing, then no translation
#  will be done, but the module will be validated,
# and any requested reports will be generated.
#
# The following values are supported:
#  xsd  == XSD 1.0 translation
#  sql == TBD: not implemented
#  sqldb == netconfcentral.org SQL data
#  html == XHTML 1.0 translation
#  yang == Canonical YANG translation
#  copy == Validate and copy with a new name.
#  c == Combined SIL C file
#  h == Combined SIL H file
#  uc == User SIL C file
#  uh == User SIL H file
#  yc == YumaPro SIL C file
#  yh == YumaPro SIL H file
#  yin == YIN translation
#  bc == YumaPro SIL Bundle C file
#  bh == YumaPro SIL Bundle H file
#
# no default for format
#
#### leaf home
# Directory specification for the home directory to use
# instead of HOME.
#
# there is no default for home ($HOME env var used)
# (e.g. home /home/someuser)
#
#### leaf html-div [boolean]
#  If 'true', and HTML translation is requested, then this
#  parameter will cause the output to be a single <div> element,
#  instead of  an entire HTML file.
#  If 'false', then a complete <html> element will be generated
#  instead.
#
# html-div false
#
#### leaf html-toc [TocType]
#  The HTML Table of Contents output mode.
#  Ignored unless the 'format' parameter is
#  set to 'html'.
#  Values:
#    - none: no ToC generated
#    - plain: plain list ToC generated
#    - menu: drop-down menu ToC generated.
#
# html-toc menu
#
#### leaf identifiers [empty]
#  Validate the file, write the list of object identifiers,
#  that this [sub]module contains, then exit.
#
# the default is not to print the identifiers and exit
#
#### leaf indent
#  Number of spaces to indent (0 to 9) when formatting
#  nested output.
#
# indent 2
#
#### leaf log
#  Filespec for the log file to use instead of STDOUT.
#  Leave out to use STDOUT for log messages
#
# no default for log
#
#### leaf log-append
#  If present, the log will be appended not over-written.
#  If not, the log will be over-written.
#  Only meaningful if the 'log' parameter is also present.
#
# default is to overwrite (flag not present)
#
#### leaf log-level
#  Sets the debug logging level for the program.
#    off
#    error
#    warn
#    info
#    debug
#    debug2
#    debug3
#
# log-level info
#
#### leaf modpath
#  Internal file search path for YANG files.
#  e.g., modpath "~/modules:/some/path:../another/path"
#  Refer to user manual for complete module search path
#
# no default for modpath

modpath "{{ path }}"
#### leaf-list module
#  Specify a module that the server should load at boot-time
#  e.g., module test2
#        module test3
#
# no default for module
#
#### leaf modversion [empty]
#  Validate the file(s), write the [sub]module
#  name, version and source filespec, then exit.
#
# default is to not print each module version and exit
#
#### leaf objview [ObjViewType]
#  Determines how objects are generated in HTML and
#  YANG outputs.
#  XSD output is always 'cooked', since refined groupings
#  and locally-scoped definitions are not supported in XSD.
#
#  raw -- output includes augment and uses clauses, not the
#         expanded results of those clauses.
#  cooked -- output does not include augment or uses clauses,
#            just the objects generated from those clauses.
#
# objview raw
#
#### leaf output [string]
#  Output directory or file name to use.
#  Default is STDOUT if none specified and the
# 'defnames' parameter is also set to 'false'.
#
# no default for output
#
#### leaf quiet-mode
#
# If present, do not print summaries with 0 errors and
# zero warnings. Only print parser summaries if
# warnings or errors are found.
# If not present then parse in the normal mode and print
# parser summaries for these modules.
#
# The default is not present.
#
#### leaf show-errors
#  If present, list each error or warning
#  number and its default message string.
#  The program will exit after this is done.
#
# (no default for show-errors)
#
#### leaf sil-bundle [string]
#  Generate a SIL bundle. Create combined SIL code for multiple YANG
#  modules at once.  Needed to support automatic generation of
#  augment-stmt code.  If the format parameter is present,
#  then it must be equal to one of the 'C' or 'H' formats.
#  If not set, then all files in the SIL bundle will be created.
#  Forces defnames parameter to true.
#
# no default for sil-bundle
#
#### leaf sil-edit2 [empty]
# If present, then the 2nd generation 'edit' functions
# will be generated for SIL or SIL-SA modes
# instead of first generation 'edit' functions,
# if code generation is being requested. Ignored otherwise.
#
# default for sil-edit2 is 'not-present'
#
#### leaf sil-get2 [empty]
# If present, then the 2nd generation 'get' functions
# will be generated for SIL or SIL-SA modes
# instead of first generation 'get' functions,
# if code generation is being requested. Ignored otherwise.
#
# default for sil-get2 is 'not-present'
#
#### leaf-list sil-include [string] [d:none]
#  The name of an include file to inject into C files
#  when the conversion format is equal to 'c' or 'yc'.
#  An include statement will be generated for each
#  instance of this parameter, in the order these
#  parameters are given. Zero or more instances of this
#  parameter are allowed.
#
#  The include statements will be generated after
#  the system <include> statement and general
#  YumaPro include statements, but before the
#  YANG module specific include statements.
#
# no default for sil-include
#
#### leaf sil-sa [empty]
# If present, then SIL-SA (subagent) code will be generated
# instead of SIL (master-agent) code, if code generation
# is being requested. Ignored otherwise.
#
# default for sil-sa is 'not-present'
#
#### leaf simurls [boolean]
#  If 'true', and HTML translation is requested, then this
#  parameter will cause the format of URLs within links
#  to be generated in simplified form, for WEB development
#  engines such as CherryPy, which support this format.
#
#  Normal URL format (false):
#   example.html?parm1=foo&parm2=bar#frag
#
#  Simplified URL format (true):
#   example/foo/bar#frag
#
# simurls false
#
#### leaf stats [enumeration] [d:none]
#     Generate a statistics report for each input
#     module.   Developers: see ydump/yangstats.h
#
# enum values:
#   none
#   brief
#   basic
#   advanced
#   all
#
# stats none
#
#### leaf subdirs [boolean]
#  If false, the file search paths for modules, scripts,
#  and data files will not include sub-directories if they
#  exist in the specified path.
#
# If true, then these file search paths will include
# sub-directories, if present.  Any directory name beginning
# with a dot '.' character, or named 'CVS', will be ignored.
#
# subdirs true
#
#### leaf-list subtree [NcPathSpec]
#  Path specification of the directory subtree to use.
#  All of the YANG source modules contained in the
#  specified directory sub-tree will be processed.
#  length: 1 .. 4095
#
# no default for subtree
#
#### leaf totals [enumeration] [d:none]
#    Controls how stats totals are displayed.
#    Ignored if stats equals 'none'
#
#  enum values:
#    none
#    summary
#    summary-only
#
# totals none
#
#### leaf tree-identifiers
#  Validate the file, write the list of object identifiers,
#  in tree format, that this [sub]module contains, then exit.
#
#  Each accessible object node is listed once,
#  including all child nodes.  Notifications and
#  RPC methods are considered top-level objects,
#  and have object identifiers as well as configuration
#  and state data..
#
# (no default for tree identifiers)
#
#### leaf unified [boolean] [d:false]
#  If set to 'true', then submodules will be processed
#  within the main module, in a unified report,
#  instead of separately, one report for each file.
#
# If 'false', a separate output file is generated for each
# input file, so that XSD output and other reports
# for a main module will not include information for
# submodules.
#
# unified false
#
#### leaf urlstart [string]
#  If present, then this string will be used to prepend
#  to HREF links and URLs generated for SQL and HTML
#  translation.  It is expected to be a URL ending
#  with a directory path.  The trailing separator '/'
#  will be added if it is missing.
#
# If not present (the default), then relative URLs,
# starting with the file name will be generated instead.
#
# no default for urlstart
#
#### leaf version
#  Print program version string and exit.
#
# (no default for version)
#
#### leaf versionnames
#  If false, the default filenames will not contain
#  the module version string.
#  If true, the [sub]module name and version string
#  are both used to generate a default file name,
#  when the 'defnames' parameter is set to 'true'.
#
# versionnames true
#
#### leaf warn-error
# Controls whether all warnings are elevated to errors
#
# warn-error false
#
#### leaf warn-idlen
#  Controls whether identifier length warnings will be generated.
#  range 0 | 8 .. 1023;  0==disable ID length checking
#
# warn-idlen 64
#
#### leaf warn-linelen
#  Controls whether line length warnings will be generated.
#  range 0 | 40 .. 4095;  0==disable ID length checking
#
# warn-linelen 72
#
#### leaf-list warn-off
#  Controls whether the specified warning number will be generated
#  range 1000 .. 1999;
#  e.g., warn-off 1022
#
# no default for warn-off
#
#### leaf-list warn-up
#  Controls whether the specified warning number will be elevated
#  to an error
#  range 1000 .. 1999;
#  e.g., warn-up 1022
#
# no default for warn-up
#
#### leaf with-ocpattern
#
# If true, then OpenConfig patterns with be checked.
# If the module name starts with the string 'openconfig-'
#then all pattern statements within that module
# are treated as POSIX patterns, not YANG patterns.
#If false, then the pattern statements in all modules
#will be checked as YANG patterns.
#
# with-ocpattern false
#
#### leaf xsd-schemaloc [string]
#  If present, then the schemaLocation attribute will
#  be generated during XSD translation.  This will be
#  done for the module being processed, and any modules
#  that are imported into that module.
#
#  If not present (the default), then the schemaLocation
#  attribute is not generated during XSD translation.
#  Relative URLs for include and import directives will
#  be generated, starting with the file name.
#
# no default for xsd-schemaloc
#
#### leaf yumapro-home
#  Directory for the yuma project root
#  This will override the YUMAPRO_HOME environment variable
#  if it is set.
#
#  no default for yumapro-home

}