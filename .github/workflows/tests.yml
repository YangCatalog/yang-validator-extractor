name: Python tests

on:
  push:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize, edited]

jobs:
  build:

    runs-on: ubuntu-22.04
    steps:
      - name: Set up yanglint
        run: |
          sudo apt update
          sudo apt install libpcre2-dev libssl3 libssl-dev libxml2-dev
          git clone --single-branch --depth 1 https://github.com/CESNET/libyang.git
          mkdir libyang/build
          cd libyang/build
          cmake ..
          make
          sudo make install
          sudo ldconfig

      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            tests_requirements.txt
            lint_requirements.txt

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r lint_requirements.txt
          pip install -r tests_requirements.txt

      - name: Check isort
        uses: jamescurtin/isort-action@master

      - name: Check flake8
        run: flake8 .

      - name: Check black
        uses: psf/black@stable

      - name: Run tests
        env:
          YANGCATALOG_CONFIG_PATH: tests/resources/test.conf
          DJANGO_SETTINGS_MODULE: tests.resources.settings
          CONFD_VERSION: 0
        run: coverage run manage.py test tests

      - name: Store coverage file
        uses: actions/upload-artifact@v3.1.1
        with:
          name: coverage
          path: .coverage

      - name: Write coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          COMMENT_TEMPLATE: '
            {% extends "base" %}
            {% block title %}
            {{ super() }}
  
            <details>
            <summary>Full coverage report summary (click to unfold)</summary>
            {% for file_coverage in coverage.files.values() %}
            {{ file_coverage.path }}: <b>{{ ((file_coverage.info.percent_covered * 100)|int) }}%</b><br>
            {% endfor %}
            </details>
  
            {% endblock title %}
          '

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v3.1.1
        if: ${{ steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true' }}
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt

  update-coverage-badge:
    needs: build
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'push' && github.event.push.head.repo.full_name != 'YangCatalog/yang-validator-extractor' }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.push.head.ref }}
          repository: ${{ github.event.push.head.repo.full_name }}

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - uses: actions/download-artifact@v3.0.1
        with:
          name: coverage

      - name: Coverage badge
        uses: tj-actions/coverage-badge-py@v1.8

      - name: Move coverage badge to images folder
        run: mv coverage.svg .github/images

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v12
        id: changed_files
        with:
          files: .github/images/coverage.svg

      - name: Commit files
        if: ${{ steps.changed_files.outputs.files_changed == 'true' }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .github/images/coverage.svg
          git commit -m "Updated coverage.svg"
          git push
  
